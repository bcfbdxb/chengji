#include<iostream>
#include<fstream>
#include<iomanip>
#include<sstream>
#define STUDENT  12        
using namespace std;
struct student{
    char num[STUDENT+1]; 
    char name[STUDENT+1];
    char academy[STUDENT+1];
    float verage; 
}s1[STUDENT];
struct refree{
	char name[7];
	int score[7]; 
}s2[7]; 
int main(int argc,char*argv[]){
    ifstream in("/users/s20181106118/Desktop/student.txt");
	ifstream a("/users/s20181106118/Desktop/refree.txt");    
    ofstream out("/users/s20181106118/Desktop/excle.txt",ios_base::out);
    int i,k,t=0,j,s=0,m=0;
    student temp;
    for(i=0;i<STUDENT+1;i++){
     	in>>s1[i].name>>s1[i].num>>s1[i].academy;  
		 //out<<s1[i].name<<endl;   	
     	}
    for(i=0;i<STUDENT;i++){
     	//cout<<s1[i].name;
     	//cout<<s1[i].num;
     	//cout<<s1[i].academy;
		 }
	for(i=0;i<7;i++){
		a>>s2[i].name;
		out<<s2[i].name<<"    ";
	}
	out<<endl;
	for(i=0;i<STUDENT;i++){
		for(k=0;k<7;k++){
			a>>s2[i].score[k]; 
			out<<s2[i].score[k]<<"           "; 
		}
	    out<<s1[i].name<<endl;
		out<<endl;
		for(j=0;j<7-1;j++){ 
		    for(k=0;k<7-1-j;k++){
		        if(s2[i].score[k]>s2[i].score[k+1]){
		  	       t=s2[i].score[k];
		  	       s2[i].score[k]=s2[i].score[k+1];
		  	       s2[i].score[k+1]=t;	
		  }
		}
	  }
	    for(k=1;k<6;k++){
		  s+=s2[i].score[k]; 
	}
		 //cout<<s<<endl;
	     s1[i].verage=s*1.0/5;
	     //cout<<setiosflags(ios::fixed)<<setprecision(2)<<s1[i].verage<<endl;
	    s=0;
		}
    for(i=0;i<STUDENT-1;i++){ 
		for(j=0;j<STUDENT-i-1;j++){
			if(s1[j].verage<s1[j+1].verage){
				temp=s1[j];
				s1[j]=s1[j+1];
				s1[j+1]=temp;
				}
				
			}
		}
	for(i=0;i<STUDENT;i++){
		//cout<<s1[i].verage<<endl;
		}
	if(out.is_open()){ 
		for(i=0;i<STUDENT;i++){
		out<<"ranking: "<<i+1<<"   ";
		out<<"name:  "<<s1[i].name<<"   ";
	    out<<"number:  "<<s1[i].num<<"   ";
		out<<"academy:  "<<s1[i].academy<<"      ";
		out<<"verage:  "<<setiosflags(ios::fixed)<<setprecision(2)<<s1[i].verage<<"   ";	
		out<<endl;
		}
		//out<<"refree: ";
		
		}	
	out.close();
	return 0;
	}
	
    
    
